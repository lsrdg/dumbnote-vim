*dumbnote.txt* markdown notes 

     _                 _                 _       ~
  __| |_   _ _ __ ___ | |__  _ __   ___ | |_ ___ ~
 / _` | | | | '_ ` _ \| '_ \| '_ \ / _ \| __/ _ \~
| (_| | |_| | | | | | | |_) | | | | (_) | ||  __/~
 \__,_|\__,_|_| |_| |_|_.__/|_| |_|\___/ \__\___|~
                                                 ~

====================================================================
CONTENTS					  *DumbnoteContents*

1. Introduction ......... |DumbnoteIntroduction|
2. Usage ................ |DumbnoteUsage| 
3. Mappings ............. |DumbnoteMappings| 
4. License .............. |DumbnoteLicense| 
5. Bugs ................. |DumbnoteBugs| 
6. Contributing ......... |DumbnoteContributing|
7. Credits .............. |DumbnoteCredits|

====================================================================
Section 1: Introduction                       *DumbnoteIntroduction*

Dumbnote takes a (user-defined) directory as being a "collection of
text files, if not otherwise defined, it will create markdown (*.md) 
files, which may or may not contain subdirectories with more text 
files.

The plugin then will allow the user to quickly create and open
notes (*.md, *.txt, etc files) and collections (directories with text
files).

All the mappings are prefixed with `<leader>z` by default. But all
of them can be redefined by the user.

All the variables in this documentation prefixed by `g:` are meant
to be redefined on the user's `.vimrc`.

In the *dumbnoteMappings* section, you will find the default
mapping on the left, and its variable name on the right.
To define your own mapping, just prepend a `g:` to its variable
name.

Take a look at the start of the next section (*DumbnoteUsage*) to
see how to use the global variable `g:dumbnoteDefaultCollection`
to set the path of your collections. And do the same if you want
to remap something.

Support to wiki links is planned, but not yet implemented.

====================================================================
Section 2: Usage    	                             *DumbnoteUsage*
						*dumbnoteFileFormat*
					 *dumbnoteDefaultCollection*

By the default, the collection's directory is `~/dumbnote`. 
If, for example, you want your notes to be placed into 
`/home/myusername/myvimscripts/dumbnote/collections`, add this to
your .vimrc (or init.vim):

    let g:dumbnoteDefaultCollection = $HOME . "/myvimscripts/dumbnote/collections"

The "collections" are just normal directories, as the "notes" are 
merely markdown plaintext files. Just use the system's tools to move
them around. But if you do move them, remember to set the
`g:dumbnoteDefaultCollection` path.

Once you have that configured, all mappings will just deal with the
notes (files) on that path.

Just in case it is not clear enough yet: you don't actually need to 
do anything. If you just installed the plugin and run the mapping
to create a new note, the note will be created inside `~/dumbnote/`.

By default a note is a *.md file. To change that to, for example
*.txt, just use:
    
    let g:dumbnoteFileFormat = ".txt"

====================================================================
Section 3: Mappings                       	  *DumbnoteMappings*

<leader>zc			       *dumbnoteCreateCollectionMap*
    ask for a name for the collection and create a directory with
    the given name. 

<leader>za 				     *dumbnoteCreateNoteMap*
    ask for a name for the note and create the note on the default
    collection path. If you want the note to be created inside
    another collection, just prepend the name of the collection:
    `mysubcollection/newnote`, will create the note inside the
    default collections path, inside the directory/collection called
    "mysubcollection", with the name "newnote". You don't need to
    specify the extension name.

<leader>zz  				       *dumbnoteOpenNoteMap*
    by far my favorite because of its simplicity. It will put the
    cursor on the command line, with the `:e ` command plus the path
    to your default collection. From there you can use the normal
    tab-completion to get the name of your note or even the path to
    the note, if it is located in another collection (subdirectory).

<leader>zl 				      *dumbnoteListNotesMap*
    it will open whichever file manager you have inside the 
    default collection's directory. From there, it is you against
    your file manager. Tested with Netrw, Vim-dirvish, Vim-vinegar
    and NerdTree. If you don't have a file manager, Vim will 
    probably open it with Netrw. If you don't have a file manager,
    not necessarily need one. In most of the cases, a simple
    `<leader>zz` + TAB will get you there.

====================================================================
Section 4: License                       	   *DumbnoteLicense*

MIT License

Copyright (c) 2017 - lsrdg

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

====================================================================
Section 5: Bugs                       		      *DumbnoteBugs*

Sure! Why not? It will be my pleasure to take a look at it. Just
submit a PR or create an issue at github.com/lsrdg/dumbnote.vim/.

====================================================================
Section 6: Contributing                       *DumbnoteContributing*

Same as above:
Sure! Why not? It will be my pleasure to take a look at it. Just
submit a PR or create an issue at github.com/lsrdg/dumbnote.vim/.

====================================================================
Section 7: Credits                       	   *DumbnoteCredits*

Special thanks to http://stevelosh.com/ and his great: http://learnvimscriptthehardway.stevelosh.com/

The Vim community for all available resources.

The Neovim community for keeping the thing breathing.
